{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\reactjs\\\\gmailpswrd\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const userLoggedInStatus = localStorage.getItem('isLoggedin'); //isLoggedIn ki value 1 yaha store karwa li \n\n    if (userLoggedInStatus === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    //localstorage stor the data in key value pair and session storage\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated1: isLoggedIn,\n      onLogout1: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","userLoggedInStatus","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler"],"sources":["C:/Users/admin/Desktop/reactjs/gmailpswrd/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n   useEffect(()=> {\n    const userLoggedInStatus = localStorage.getItem('isLoggedin'); //isLoggedIn ki value 1 yaha store karwa li \n    if(userLoggedInStatus === '1')\n    {\n      setIsLoggedIn(true);\n    }\n  },[])\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    //localstorage stor the data in key value pair and session storage\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated1={isLoggedIn} onLogout1={logoutHandler} /> \n                                                                      {/* isLoggedIn is variable and logooutHandler funtn 1.MainHeader app -> mainheader->navgtn*/}\n                                                                    {/*2nd main               */}\n      <main>                                                          \n        {!isLoggedIn && <Login onLogin={loginHandler} />}    \n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;EACCC,SAAS,CAAC,MAAK;IACd,MAAMO,kBAAkB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA3B,CADc,CACiD;;IAC/D,IAAGF,kBAAkB,KAAK,GAA1B,EACA;MACED,aAAa,CAAC,IAAD,CAAb;IACD;EACF,CANS,EAMR,EANQ,CAAT;;EAOD,MAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACA;IACA;IACAJ,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAP,aAAa,CAAC,IAAD,CAAb;EACD,CAND;;EAQA,MAAMQ,aAAa,GAAG,MAAM;IAC1BR,aAAa,CAAC,KAAD,CAAb;EACD,CAFD;;EAIA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,UAAD;MAAY,gBAAgB,EAAED,UAA9B;MAA0C,SAAS,EAAES;IAArD;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,WACG,CAACT,UAAD,iBAAe,QAAC,KAAD;QAAO,OAAO,EAAEK;MAAhB;QAAA;QAAA;QAAA;MAAA,QADlB,EAEGL,UAAU,iBAAI,QAAC,IAAD;QAAM,QAAQ,EAAES;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAhCQV,G;;KAAAA,G;AAkCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}