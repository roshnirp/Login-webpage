{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\reactjs\\\\gmailpswrd\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: ' ',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); // useEffect(() => {\n  //   const timeOutIdentifier = setTimeout(() => {\n  //     console.log(\"Checking form Validity!\")\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   },700)\n  //   return () => { // Cleanup Function\n  //     console.log('CLEAN UP')\n  //     clearTimeout(timeOutIdentifier);\n  //   }\n  // }, [enteredEmail, enteredPassword])\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: ' ',\n    isValid: null\n  });\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); //setEnteredEmail(event.target.value);\n\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && enteredPassword.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    }); //setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"gKbKsTztXyUoTIfNX54CTJYFSIU=\");\n\n_c = Login;\nexport default Login; // import React, { useState,  useReducer} from 'react';\n// import Card from '../UI/Card/Card';\n// import classes from './Login.module.css';\n// import Button from '../UI/Button/Button';\n// const emailReducer =(state, action) => {\n//   if(action.type === \"USER_INPUT\")\n//   {\n//     return({value: action.val, isValid : action.val.includes('@')})\n//   }\n//   if(action.type === \"USER_BLUR\")\n//   {\n//     return({value : state.value, isValid : state.value.includes('@')})\n//   }\n//   return({value: '', isValid: false});\n// }  \n// const Login = (props) => {\n//   // const [enteredEmail, setEnteredEmail] = useState('');\n//   // const [emailIsValid, setEmailIsValid] = useState();\n//   const [enteredPassword, setEnteredPassword] = useState('');\n//   const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n//   // useEffect(\n//   //   ()=>{\n//   //   const timeOutIdentifier = setTimeout(() => {\n//   //   console.log(\"checking form validity\");\n//   //   setFormIsValid(\n//   //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//   //   ); \n//   // },700)\n//   // return () => { // cleanup functn\n//   //   clearTimeout(timeOutIdentifier);\n//   //   console.log(\"cleanup\");\n//   // }\n//   // },[enteredEmail,enteredPassword])\n//   const [emailState, dispatchEmail] = useReducer(emailReducer, {\n//     value : '',\n//     isValid : null\n//   });\n//   const emailChangeHandler = (event) => {\n//    dispatchEmail({type: 'USER_INPUT' , val: event.target.value})\n//     // setEnteredEmail(event.target.value);\n//     setFormIsValid(\n//           // enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//           event.target.value.includes('@') && enteredPassword.trim().length > 6\n//         ); \n//   };\n//   const passwordChangeHandler = (event) => {\n//     setEnteredPassword(event.target.value);\n//     setFormIsValid(\n//        emailState.isValid && enteredPassword.trim().length > 6\n//     );\n//   };\n//   const validateEmailHandler = () => {\n//     dispatchEmail({type: 'INPUT_BLUR' })\n//     // setEmailIsValid(enteredEmail.includes('@'));\n//   };\n//   const validatePasswordHandler = () => {\n//     setPasswordIsValid(enteredPassword.trim().length > 6);\n//   };\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin(emailState.value, enteredPassword);\n//   };\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={emailState.value}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={enteredPassword}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n//             {/* formvalid button enable forminvalid button disable \n//             formvalid he to button ko enable karna hoga disable false hoga\n//             forminvalid he to button ko disable karna hoga disable ture hoga */}\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n// export default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","target","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/admin/Desktop/reactjs/gmailpswrd/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT')\n  {\n    return({value : action.val, isValid : action.val.includes('@')});\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return({value : state.value, isValid : state.value.includes('@')});\n  }\n\n  return({value : ' ', isValid : false});\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // useEffect(() => {\n    \n  //   const timeOutIdentifier = setTimeout(() => {\n  //     console.log(\"Checking form Validity!\")\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   },700)\n\n\n  //   return () => { // Cleanup Function\n  //     console.log('CLEAN UP')\n  //     clearTimeout(timeOutIdentifier);\n  //   }\n\n  // }, [enteredEmail, enteredPassword])\n  \n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value : ' ',\n    isValid : null \n  });\n\n\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val : event.target.value})\n\n    //setEnteredEmail(event.target.value);\n    setFormIsValid(\n            event.target.value.includes('@') && enteredPassword.trim().length > 6\n          );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(\n      emailState.isValid && enteredPassword.trim().length > 6\n    );\n\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type : 'INPUT_BLUR'})\n    //setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n\n\n\n// import React, { useState,  useReducer} from 'react';\n\n// import Card from '../UI/Card/Card';\n// import classes from './Login.module.css';\n// import Button from '../UI/Button/Button';\n\n// const emailReducer =(state, action) => {\n//   if(action.type === \"USER_INPUT\")\n//   {\n//     return({value: action.val, isValid : action.val.includes('@')})\n//   }\n//   if(action.type === \"USER_BLUR\")\n//   {\n//     return({value : state.value, isValid : state.value.includes('@')})\n//   }\n//   return({value: '', isValid: false});\n// }  \n\n// const Login = (props) => {\n//   // const [enteredEmail, setEnteredEmail] = useState('');\n//   // const [emailIsValid, setEmailIsValid] = useState();\n//   const [enteredPassword, setEnteredPassword] = useState('');\n//   const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n\n//   // useEffect(\n//   //   ()=>{\n//   //   const timeOutIdentifier = setTimeout(() => {\n//   //   console.log(\"checking form validity\");\n//   //   setFormIsValid(\n//   //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//   //   ); \n//   // },700)\n\n//   // return () => { // cleanup functn\n//   //   clearTimeout(timeOutIdentifier);\n//   //   console.log(\"cleanup\");\n//   // }\n//   // },[enteredEmail,enteredPassword])\n  \n//   const [emailState, dispatchEmail] = useReducer(emailReducer, {\n//     value : '',\n//     isValid : null\n//   });\n \n//   const emailChangeHandler = (event) => {\n//    dispatchEmail({type: 'USER_INPUT' , val: event.target.value})\n//     // setEnteredEmail(event.target.value);\n//     setFormIsValid(\n//           // enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//           event.target.value.includes('@') && enteredPassword.trim().length > 6\n//         ); \n\n    \n//   };\n\n//   const passwordChangeHandler = (event) => {\n//     setEnteredPassword(event.target.value);\n\n//     setFormIsValid(\n//        emailState.isValid && enteredPassword.trim().length > 6\n//     );\n//   };\n\n//   const validateEmailHandler = () => {\n//     dispatchEmail({type: 'INPUT_BLUR' })\n//     // setEmailIsValid(enteredEmail.includes('@'));\n//   };\n\n//   const validatePasswordHandler = () => {\n   \n//     setPasswordIsValid(enteredPassword.trim().length > 6);\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin(emailState.value, enteredPassword);\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={emailState.value}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={enteredPassword}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n//             {/* formvalid button enable forminvalid button disable \n//             formvalid he to button ko enable karna hoga disable false hoga\n//             forminvalid he to button ko disable karna hoga disable ture hoga */}\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n// export default Login;\n"],"mappings":"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},"metadata":{},"sourceType":"module"}